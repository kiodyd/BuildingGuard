{"version":3,"sources":["getss.js"],"names":["_textureIdMapRenderTexture","window","global_arr","orgArr","cc","Class","extends","Component","properties","sprite1","type","Sprite","default","sprite2","onLoad","node","_getImgData","getImgData","bind","start","main2","spriteFrame","cosine","main1","originData","grayData","gray","diffData","getdiff","ssData","getss","onDestroy","histogramData","getHistogram","imgData","data","i","len","length","parseInt","gray_data","avglist","hrzData","rect","height","hrz","j","width","push","avg","arraySum","ss","Math","pow","log","getRect","tex","getTexture","rt","getId","RenderTexture","initWithSize","drawTextureAt","readPixels","id","destroy","array","total","imageData","arr","pow4","red","green","blue","index","arr1","arr2","axb","a","b","console","sqrt"],"mappings":"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","file":"getss.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\game","sourcesContent":["let _textureIdMapRenderTexture = {}\r\n\r\nwindow.global_arr={\r\n    orgArr:null,\r\n}\r\n\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        sprite1:{\r\n            type:cc.Sprite,\r\n            default:null,\r\n        },\r\n        sprite2:{\r\n            type:cc.Sprite,\r\n            default:null,\r\n        },\r\n\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this.node._getImgData = this.getImgData.bind(this);\r\n\r\n    },\r\n\r\n    start() {\r\n        // this.main1(this.sprite1.spriteFrame)\r\n        // this.main1(this.sprite2.spriteFrame)\r\n\r\n        global_arr.orgArr=this.main2(this.sprite1.spriteFrame);//背景原图的直方图-》global\r\n\r\n        //测试用\r\n        this.cosine(this.main2(this.sprite1.spriteFrame),this.main2(this.sprite2.spriteFrame));\r\n    },\r\n\r\n    //方法1  方差\r\n    main1(spriteFrame){//选择sprite执行\r\n        var originData=this.getImgData(spriteFrame);\r\n        var grayData=this.gray(originData);\r\n        var diffData=this.getdiff(grayData);\r\n        var ssData=this.getss(diffData);\r\n        this.onDestroy(spriteFrame);\r\n    },\r\n\r\n    //方法2  相似度\r\n    main2(spriteFrame){//选择sprite执行\r\n        var originData=this.getImgData(spriteFrame);\r\n        var grayData=this.gray(originData);\r\n        var histogramData=this.getHistogram(grayData);\r\n        return histogramData;\r\n    },\r\n\r\n\r\n\r\n    //////////////////////////////////////////////////////////////////////////////////////\r\n    gray(imgData){//计算灰度\r\n        var data=imgData;\r\n\r\n        for(var i=0, len=data.length;i<len;i+=4){\r\n            var gray=parseInt((data[i]+data[i+1]+data[i+2])/3);\r\n            data[i+2]=data[i+1]=data[i]=gray;\r\n        \r\n        }\r\n        // cc.log( \"grayData\", imgData);\r\n        return imgData;\r\n    },\r\n\r\n    getdiff(gray_data){//计算每行像素平均值\r\n        var avglist=[];\r\n        var hrzData=[];\r\n\r\n        for (var i =0;i<this.rect.height;i++){//计算第i行的平均值，录入avglist\r\n            var hrz=0;\r\n\r\n            for (var j =0;j<this.rect.width;j++){//第i行总值\r\n                hrz += gray_data[i*this.rect.width+j];\r\n            \r\n            }\r\n            \r\n            hrzData.push(hrz);\r\n            var avg =hrzData[i]/this.rect.width;//第i行的平均值\r\n            avglist.push(avg);\r\n\r\n        }\r\n        // cc.log( \"diffData\", avglist);\r\n        return avglist;\r\n    },\r\n\r\n    getss(avglist){//计算方差\r\n\r\n        var avg=this.arraySum(avglist)/avglist.length;//计算平均值\r\n        // cc.log( \"avgData\", avg);\r\n        var ss=0;//方差初始值\r\n\r\n        // cc.log( \"avglist.length\", avglist.length);\r\n        for(var i=0;i<avglist.length;i++){//计算方差\r\n            ss+=Math.pow((avglist[i]-avg),2)/avglist.length;\r\n            // cc.log( \"avglist[i]\", avglist[i]);\r\n            \r\n            // cc.log( \"ss\", ss);\r\n        }\r\n\r\n        cc.log( \"ssData\", ss);\r\n        return ss;\r\n\r\n    },\r\n\r\n    getImgData(spriteFrame) {//获取图片像素\r\n        // let spriteFrame = sprite.spriteFrame\r\n        if (spriteFrame == null) {\r\n            return false\r\n        }\r\n\r\n        let rect = spriteFrame.getRect()//图片实际位置与长款\r\n        this.rect=rect;\r\n\r\n        // console.log( \"rect\", rect)\r\n\r\n        let tex = spriteFrame.getTexture()\r\n        var rt = _textureIdMapRenderTexture[tex.getId()]\r\n\r\n        // RenderTexure方式\r\n        if (!rt) {\r\n            rt = new cc.RenderTexture()\r\n            rt.initWithSize(tex.width, tex.height)\r\n            rt.drawTextureAt(tex, 0, 0)\r\n            _textureIdMapRenderTexture[tex.getId()] = rt\r\n            // console.log(\"rt!=null\");\r\n        }else{\r\n            // console.log(\"rt=null\");\r\n        }\r\n\r\n        // data就是这个texture的rgba值数组\r\n        let data\r\n        data = rt.readPixels(data, 1, 1, rect.width-1, rect.height-1)\r\n        // cc.log( \"originData\", data)\r\n        return data;\r\n    },\r\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    \r\n\r\n    onDestroy(spriteFrame) {\r\n        // let spriteFrame = sprite.spriteFrame\r\n        if (spriteFrame == null) {\r\n            return false\r\n        }\r\n\r\n        let tex = spriteFrame.getTexture()\r\n        let id = tex.getId()\r\n        if (_textureIdMapRenderTexture[id]) {\r\n            _textureIdMapRenderTexture[id].destroy()\r\n            delete _textureIdMapRenderTexture[id]\r\n            // console.log(\"destroy:\"+sprite.node.name);\r\n        }\r\n    },\r\n\r\n    \r\n    arraySum(array){//数组求和算法\r\n        var total = 0;\r\n        var len = array.length;\r\n        for (var i = 0; i < len; i++){\r\n          total += array[i];\r\n        }\r\n        // cc.log( \"arraySumData\", total);\r\n        return total;\r\n    },\r\n\r\n    //得直方图\r\n    getHistogram(imageData) {\r\n        var arr = [];\r\n        for (var i = 0; i < 64; i++) {\r\n            arr[i] = 0;\r\n        }\r\n\r\n        var pow4 = Math.pow(4, 2);\r\n        for (var i = 0, len = imageData.length; i < len; i += 4) {\r\n            var red = (imageData[i] / 64) | 0;\r\n            var green = (imageData[i + 1] / 64) | 0;\r\n            var blue = (imageData[i + 2] / 64) | 0;\r\n            var index = red * pow4 + green * 4 + blue;\r\n            arr[index]++;\r\n        }  \r\n        // console.log(\"histogramData=\",arr);\r\n            return arr;\r\n    } ,\r\n\r\n    //得相似度\r\n    cosine(arr1, arr2) {\r\n        var axb = 0,\r\n            a = 0,\r\n            b = 0;\r\n        for (var i = 0, len = arr1.length; i < len; i++) {\r\n            axb += arr1[i] * arr2[i];\r\n            a += arr1[i] * arr1[i];\r\n            b += arr2[i] * arr2[i];\r\n        }\r\n        console.log(\"cosine=\"+(axb / (Math.sqrt(a) * Math.sqrt(b))));\r\n        return axb / (Math.sqrt(a) * Math.sqrt(b));\r\n    }\r\n    // update (dt) {},\r\n});"]}