{"version":3,"sources":["DataFunc.js"],"names":["window","dataFunc","arrTables","csvTables","csvTableForArr","tableCast","tableComment","CELL_DELIMITERS","LINE_DELIMITERS","uiPanelAnimationClips","randomNum","Min","Max","Range","Rand","Math","random","num","round","getTable","tableName","getTableArr","queryOne","key","value","table","tbItem","hasOwnProperty","queryByID","ID","queryAll","ret","loadConfigs","progressCb","callback","cc","loader","loadResDir","AnimationClip","err","clips","error","message","i","length","name","currentLoad","forEach","index","loadRes","content","addTable","tableContent","force","tableData","tableArr","opts","header","CSV","parse","row","keyname","push","cast","comment","getterCast","d","Array","Number","isNaN","STANDARD_DECODE_OPTS","skip","limit","STANDARD_ENCODE_OPTS","delimiter","newline","quoteMark","doubleQuoteMark","quoteRegex","assign","args","prototype","slice","call","arguments","base","rest","len","attr","map","collection","fn","results","getType","obj","Object","toString","getLimit","buildObjectConstructor","fields","sample","object","setter","idx","buildArrayConstructor","frequency","coll","needle","count","lastIndex","maxIndex","indexOf","mostFrequent","needles","max","detected","cur","unsafeParse","text","lines","split","splice","constructor","cells","line","shift","findIndex","list","item","quoteCount","start","end","parseInt","substring","rows","bind","min","floor"],"mappings":"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","file":"DataFunc.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\common\\script\\basic","sourcesContent":["/*\r\n    create by hao.c 2018/04/10\r\n\r\n    desc: 游戏数据相关操作逻辑\r\n */\r\n\r\nwindow.dataFunc = {\r\n    // 表格加载--\r\n    arrTables: [],\r\n    csvTables: {},\r\n    csvTableForArr: {},\r\n    tableCast: {},\r\n    tableComment: {},\r\n    CELL_DELIMITERS: [\",\", \";\", \"\\t\", \"|\", \"^\"],\r\n    LINE_DELIMITERS: [\"\\r\\n\", \"\\r\", \"\\n\"],\r\n    // 动画--\r\n    uiPanelAnimationClips: {}\r\n};\r\n\r\n// [Min,Max],可以取到最大值与最小值\r\ndataFunc.randomNum = function(Min, Max) {\r\n    var Range = Max - Min;\r\n    var Rand = Math.random();\r\n    var num = Min + Math.round(Rand * Range);\r\n    return num;\r\n};\r\n\r\ndataFunc.getTable = function(tableName) {\r\n    return dataFunc.csvTables[tableName];\r\n};\r\n\r\ndataFunc.getTableArr = function(tableName) {\r\n    return dataFunc.csvTableForArr[tableName];\r\n};\r\n\r\ndataFunc.queryOne = function(tableName, key, value) {\r\n    var table = dataFunc.getTable(tableName);\r\n    if (!table) {\r\n        return null;\r\n    }\r\n\r\n    if (key) {\r\n        for (var tbItem in table) {\r\n            if (!table.hasOwnProperty(tbItem)) {\r\n                continue;\r\n            }\r\n\r\n            if (table[tbItem][key] === value) {\r\n                return table[tbItem];\r\n            }\r\n        }\r\n    } else {\r\n        return table[value];\r\n    }\r\n};\r\n\r\ndataFunc.queryByID = function(tableName, ID) {\r\n    return dataFunc.queryOne(tableName, null, ID);\r\n};\r\n\r\ndataFunc.queryAll = function(tableName, key, value) {\r\n    var table = dataFunc.getTable(tableName);\r\n    if (!table || !key) {\r\n        return null;\r\n    }\r\n\r\n    var ret = {};\r\n    for (var tbItem in table) {\r\n        if (!table.hasOwnProperty(tbItem)) {\r\n            continue;\r\n        }\r\n\r\n        if (table[tbItem][key] === value) {\r\n            ret[tbItem] = table[tbItem];\r\n        }\r\n    }\r\n\r\n    return ret;\r\n};\r\n\r\ndataFunc.loadConfigs = function(progressCb, callback) {\r\n\r\n    // 加载动画\r\n    cc.loader.loadResDir(\"panelAnimClips\", cc.AnimationClip, function(err, clips) {\r\n        if (err) {\r\n            cc.error(err.message || err);\r\n            return;\r\n        }\r\n        for (var i = 0; i < clips.length; i++) {\r\n            dataFunc.uiPanelAnimationClips[clips[i].name] = clips[i];\r\n        }\r\n    });\r\n\r\n    // 加载数据表\r\n    var currentLoad = 0;\r\n    dataFunc.arrTables.forEach(function(tableName, index) {\r\n        cc.loader.loadRes(\"data/\" + tableName, function(err, content) {\r\n            if (err) {\r\n                cc.error(err.message || err);\r\n                return;\r\n            }\r\n            if (progressCb) {\r\n                progressCb(index + 1, dataFunc.arrTables.length);\r\n            }\r\n            addTable(tableName, content);\r\n            if (callback) {\r\n                currentLoad++;\r\n                if (currentLoad >= dataFunc.arrTables.length) {\r\n                    callback();\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    function addTable(tableName, tableContent, force) {\r\n        if (dataFunc.csvTables[tableName] && !force) {\r\n            return;\r\n        }\r\n\r\n        var tableData = {};\r\n        var tableArr = [];\r\n        var opts = {header: true};\r\n        CSV.parse(tableContent, opts, function(row, keyname) {\r\n            tableData[row[keyname]] = row;\r\n            tableArr.push(row);\r\n        });\r\n\r\n        dataFunc.tableCast[tableName] = CSV.opts.cast;\r\n        dataFunc.tableComment[tableName] = CSV.opts.comment;\r\n        dataFunc.csvTables[tableName] = tableData;\r\n        dataFunc.csvTableForArr[tableName] = tableArr;\r\n    };\r\n\r\n    function getterCast(value, index, cast, d) {\r\n\r\n        if (cast instanceof Array) {\r\n            if (cast[index] === \"number\") {\r\n                return Number(d[index]);\r\n            } else if (cast[index] === \"boolean\") {\r\n                return d[index] === \"true\" || d[index] === \"t\" || d[index] === \"1\";\r\n            } else {\r\n                return d[index];\r\n            }\r\n        } else {\r\n            if (!isNaN(Number(value))) {\r\n                return Number(d[index]);\r\n            } else if (value == \"false\" || value == \"true\" || value == \"t\" || value == \"f\") {\r\n                return d[index] === \"true\" || d[index] === \"t\" || d[index] === \"1\";\r\n            } else {\r\n                return d[index];\r\n            }\r\n        }\r\n    }\r\n\r\n    var CSV = {\r\n        /* =========================================\r\n         * Constants ===============================\r\n         * ========================================= */\r\n\r\n        STANDARD_DECODE_OPTS: {\r\n            skip: 0,\r\n            limit: false,\r\n            header: false,\r\n            cast: false,\r\n            comment: \"\"\r\n        },\r\n\r\n        STANDARD_ENCODE_OPTS: {\r\n            delimiter: dataFunc.CELL_DELIMITERS[0],\r\n            newline: dataFunc.LINE_DELIMITERS[0],\r\n            skip: 0,\r\n            limit: false,\r\n            header: false\r\n        },\r\n\r\n        quoteMark: '\"',\r\n        doubleQuoteMark: '\"\"',\r\n        quoteRegex: /\"/g,\r\n\r\n\r\n        /* =========================================\r\n         * Utility Functions =======================\r\n         * ========================================= */\r\n\r\n\r\n\r\n        assign: function() {\r\n            var args = Array.prototype.slice.call(arguments);\r\n            var base = args[0];\r\n            var rest = args.slice(1);\r\n            for (var i = 0, len = rest.length; i < len; i++) {\r\n                for (var attr in rest[i]) {\r\n                    base[attr] = rest[i][attr];\r\n                }\r\n            }\r\n\r\n            return base;\r\n        },\r\n\r\n        map: function(collection, fn) {\r\n            var results = [];\r\n            for (var i = 0, len = collection.length; i < len; i++) {\r\n                results[i] = fn(collection[i], i);\r\n            }\r\n\r\n            return results;\r\n        },\r\n\r\n        getType: function(obj) {\r\n            return Object.prototype.toString.call(obj).slice(8, -1);\r\n        },\r\n\r\n        getLimit: function(limit, len) {\r\n            return limit === false ? len : limit;\r\n        },\r\n\r\n        buildObjectConstructor: function(fields, sample, cast) {\r\n            return function(d) {\r\n                var object = new Object();\r\n                var setter = function(attr, value) {\r\n                    return object[attr] = value;\r\n                };\r\n                if (cast) {\r\n                    fields.forEach(function(attr, idx) {\r\n                        setter(attr, getterCast(sample[idx], idx, cast, d));\r\n                    });\r\n                } else {\r\n                    fields.forEach(function(attr, idx) {\r\n                        setter(attr, getterCast(sample[idx], idx, null, d));\r\n                    });\r\n                }\r\n                // body.push(\"return object;\");\r\n                // body.join(\";\\n\");\r\n                return object;\r\n            };\r\n        },\r\n\r\n        buildArrayConstructor: function(sample, cast) {\r\n            return function(d) {\r\n                var row = new Array(sample.length);\r\n                var setter = function(idx, value) {\r\n                    return row[idx] = value;\r\n                };\r\n                if (cast) {\r\n                    fields.forEach(function(attr, idx) {\r\n                        setter(attr, getterCast(sample[idx], idx, cast, d));\r\n                    });\r\n                } else {\r\n                    fields.forEach(function(attr, idx) {\r\n                        setter(attr, getterCast(sample[idx], idx, null, d));\r\n                    });\r\n                }\r\n                return row;\r\n            };\r\n        },\r\n\r\n        frequency: function(coll, needle, limit) {\r\n            if (limit === void 0) limit = false;\r\n\r\n            var count = 0;\r\n            var lastIndex = 0;\r\n            var maxIndex = this.getLimit(limit, coll.length);\r\n\r\n            while (lastIndex < maxIndex) {\r\n                lastIndex = coll.indexOf(needle, lastIndex);\r\n                if (lastIndex === -1) break;\r\n                lastIndex += 1;\r\n                count++;\r\n            }\r\n\r\n            return count;\r\n        },\r\n\r\n        mostFrequent: function(coll, needles, limit) {\r\n            var max = 0;\r\n            var detected;\r\n\r\n            for (var cur = needles.length - 1; cur >= 0; cur--) {\r\n                if (this.frequency(coll, needles[cur], limit) > max) {\r\n                    detected = needles[cur];\r\n                }\r\n            }\r\n\r\n            return detected || needles[0];\r\n        },\r\n\r\n        unsafeParse: function(text, opts, fn) {\r\n            var lines = text.split(opts.newline);\r\n\r\n            if (opts.skip > 0) {\r\n                lines.splice(opts.skip);\r\n            }\r\n\r\n            var fields;\r\n            var constructor;\r\n\r\n            function cells(lines) {\r\n                var line = lines.shift();\r\n                if (line.indexOf('\"') >= 0) {// 含引号\r\n\r\n                    // 找到这行完整的数据, 找到对称的双引号\r\n                    var lastIndex = 0;\r\n                    var findIndex = 0;\r\n                    var count = 0;\r\n                    while (lines.length > 0) {\r\n                        lastIndex = line.indexOf('\"', findIndex);\r\n                        if (lastIndex === -1 && count % 2 === 0) break;\r\n\r\n                        if (lastIndex !== -1) {\r\n                            findIndex = lastIndex + 1;\r\n                            count++;\r\n                        } else {\r\n                            line = line + opts.newline + lines.shift();\r\n                        }\r\n                    }\r\n\r\n                    var list = [];\r\n                    var item;\r\n\r\n                    var quoteCount = 0;\r\n\r\n                    var start = 0;\r\n                    var end = 0;\r\n                    var length = line.length;\r\n                    for (var key in line) {\r\n                        if (!line.hasOwnProperty(key)) {\r\n                            continue;\r\n                        }\r\n\r\n                        key = parseInt(key);\r\n                        var value = line[key];\r\n\r\n                        if (key === 0 && value === '\"') {\r\n                            quoteCount++;\r\n                            start = 1;\r\n                        }\r\n\r\n                        if (value === '\"') {\r\n                            quoteCount++;\r\n\r\n                            if (line[key - 1] === opts.delimiter && start === key) {\r\n                                start++;\r\n                            }\r\n                        }\r\n\r\n                        if (value === '\"' && quoteCount % 2 === 0) {\r\n\r\n                            if (line[key + 1] === opts.delimiter || key + 1 === length) {\r\n                                end = key;\r\n                                item = line.substring(start, end);\r\n                                list.push(item);\r\n                                start = end + 2;\r\n                                end = start;\r\n                            }\r\n\r\n                        }\r\n\r\n                        if (value === opts.delimiter && quoteCount % 2 === 0) {\r\n                            end = key;\r\n                            if (end > start) {\r\n                                item = line.substring(start, end);\r\n                                list.push(item);\r\n                                start = end + 1;\r\n                                end = start;\r\n                            } else if (end === start) {\r\n                                list.push(\"\");\r\n                                start = end + 1;\r\n                                end = start;\r\n                            }\r\n                        }\r\n\r\n                    }\r\n\r\n                    end = length;\r\n\r\n                    if (end >= start) {\r\n                        item = line.substring(start, end);\r\n                        list.push(item);\r\n                    }\r\n\r\n                    return list;\r\n                } else {\r\n                    return line.split(opts.delimiter);\r\n                }\r\n            }\r\n\r\n            if (opts.header) {\r\n                if (opts.header === true) {\r\n                    opts.comment = cells(lines); // 第一行是注释\r\n                    opts.cast = cells(lines); // 第二行是数据类型\r\n                    fields = cells(lines);\r\n                } else if (this.getType(opts.header) === \"Array\") {\r\n                    fields = opts.header;\r\n                }\r\n\r\n                constructor = this.buildObjectConstructor(fields, lines[0].split(opts.delimiter), opts.cast);\r\n            } else {\r\n                constructor = this.buildArrayConstructor(lines[0].split(opts.delimiter), opts.cast);\r\n            }\r\n\r\n            while (lines.length > 0) {\r\n                var row = cells(lines);\r\n                if (row.length > 1) {\r\n                    fn(constructor(row), fields[0]);\r\n                }\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        parse: function(text, opts, fn) {\r\n            var rows;\r\n\r\n            if (this.getType(opts) === \"Function\") {\r\n                fn = opts;\r\n                opts = {};\r\n            } else if (this.getType(fn) !== \"Function\") {\r\n                rows = [];\r\n                fn = rows.push.bind(rows);\r\n            } else {\r\n                rows = [];\r\n            }\r\n\r\n            opts = this.assign({}, this.STANDARD_DECODE_OPTS, opts);\r\n            this.opts = opts;\r\n\r\n            if (!opts.delimiter || !opts.newline) {\r\n                var limit = Math.min(48, Math.floor(text.length / 20), text.length);\r\n                opts.delimiter = opts.delimiter || this.mostFrequent(text, dataFunc.CELL_DELIMITERS, limit);\r\n                opts.newline = opts.newline || this.mostFrequent(text, dataFunc.LINE_DELIMITERS, limit);\r\n            }\r\n\r\n            // modify by jl 由表自行控制不要含有双引号.提高解析效率\r\n            return this.unsafeParse(text, opts, fn) &&\r\n                (rows.length > 0 ? rows : true);\r\n        }\r\n    };\r\n}"]}