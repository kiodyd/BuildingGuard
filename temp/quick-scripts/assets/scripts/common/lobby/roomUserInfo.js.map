{"version":3,"sources":["roomUserInfo.js"],"names":["mvs","require","cc","Class","extends","Component","properties","defaultNode","default","type","Node","commonNode","userIcon","Sprite","OwnIcon","init","active","userId","clientEvent","on","eventType","playerAccountGet","userInfoSet","setData","ownId","Game","GameManager","userInfoReq","recvMsg","console","log","account","headIcon","loader","load","url","err","texture","spriteFrame","SpriteFrame","Rect","width","height","bind","onDestroy","off"],"mappings":";;;;;;AAAA,IAAIA,MAAMC,QAAQ,SAAR,CAAV;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;;AAGRC,qBAAa;AACTC,qBAAS,IADA;AAETC,kBAAMP,GAAGQ;AAFA,SAHL;AAORC,oBAAY;AACRH,qBAAS,IADD;AAERC,kBAAMP,GAAGQ;AAFD,SAPJ;;AAYRE,kBAAU;AACNJ,qBAAS,IADH;AAENC,kBAAMP,GAAGW;AAFH,SAZF;;AAiBRC,iBAAQZ,GAAGQ;;AAjBH,KAHP;;AAwBLK,UAAM,gBAAW;AACb,aAAKR,WAAL,CAAiBS,MAAjB,GAA0B,IAA1B;AACA,aAAKL,UAAL,CAAgBK,MAAhB,GAAyB,KAAzB;AACA,aAAKC,MAAL,GAAc,CAAd;AACAC,oBAAYC,EAAZ,CAAeD,YAAYE,SAAZ,CAAsBC,gBAArC,EAAuD,KAAKC,WAA5D,EAAyE,IAAzE;AACH,KA7BI;;AA+BLC,aAAS,iBAASN,MAAT,EAAgBO,KAAhB,EAAuB;AAC5B,aAAKP,MAAL,GAAcA,MAAd;;AAEA,aAAKV,WAAL,CAAiBS,MAAjB,GAA0B,KAA1B;AACA,aAAKL,UAAL,CAAgBK,MAAhB,GAAyB,IAAzB;;AAEA,YAAGC,UAAUO,KAAb,EAAmB;AACf,iBAAKV,OAAL,CAAaE,MAAb,GAAsB,IAAtB;AACH;;AAEDS,aAAKC,WAAL,CAAiBC,WAAjB,CAA6B,KAAKV,MAAlC;AACH,KA1CI;;AA4CLK,iBAAa,qBAASM,OAAT,EAAkB;AAC3BC,gBAAQC,GAAR,CAAY,aAAaF,OAAzB;AACA,YAAIA,QAAQG,OAAR,IAAmB,KAAKd,MAA5B,EAAoC;AAChCY,oBAAQC,GAAR,CAAY,eAAZ;AACAD,oBAAQC,GAAR,CAAYF,OAAZ;AACA,gBAAIA,QAAQI,QAAR,IAAoBJ,QAAQI,QAAR,KAAqB,GAA7C,EAAkD;AAC9C9B,mBAAG+B,MAAH,CAAUC,IAAV,CAAe,EAACC,KAAKP,QAAQI,QAAd,EAAwBvB,MAAM,KAA9B,EAAf,EAAqD,UAAS2B,GAAT,EAAcC,OAAd,EAAuB;AACxE,wBAAIC,cAAc,IAAIpC,GAAGqC,WAAP,CAAmBF,OAAnB,EAA4BnC,GAAGsC,IAAH,CAAQ,CAAR,EAAW,CAAX,EAAcH,QAAQI,KAAtB,EAA6BJ,QAAQK,MAArC,CAA5B,CAAlB;AACA,wBAAG,KAAK9B,QAAR,EAAkB;AACd,6BAAKA,QAAL,CAAc0B,WAAd,GAA4BA,WAA5B;AACH;AACJ,iBALoD,CAKnDK,IALmD,CAK9C,IAL8C,CAArD;AAMH;AACJ;AACJ,KA1DI;;AA4DLC,aA5DK,uBA4DO;AACR1B,oBAAY2B,GAAZ,CAAgB3B,YAAYE,SAAZ,CAAsBC,gBAAtC,EAAwD,KAAKC,WAA7D,EAA0E,IAA1E;AACH;AA9DI;;AAiEL;AACA;AACA;AAnEJ","file":"roomUserInfo.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\common\\lobby","sourcesContent":["var mvs = require(\"Matchvs\");\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        \r\n        \r\n        defaultNode: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        commonNode: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        \r\n        userIcon: {\r\n            default: null,\r\n            type: cc.Sprite\r\n        },\r\n\r\n        OwnIcon:cc.Node\r\n        \r\n    },\r\n\r\n    init: function() {\r\n        this.defaultNode.active = true;\r\n        this.commonNode.active = false;\r\n        this.userId = 0;\r\n        clientEvent.on(clientEvent.eventType.playerAccountGet, this.userInfoSet, this);\r\n    },\r\n\r\n    setData: function(userId,ownId) {\r\n        this.userId = userId;\r\n\r\n        this.defaultNode.active = false;\r\n        this.commonNode.active = true;\r\n\r\n        if(userId == ownId){\r\n            this.OwnIcon.active = true;\r\n        }\r\n\r\n        Game.GameManager.userInfoReq(this.userId);\r\n    },\r\n\r\n    userInfoSet: function(recvMsg) {\r\n        console.log(\"recvMsg:\" + recvMsg);\r\n        if (recvMsg.account == this.userId) {\r\n            console.log(\"set user info\");\r\n            console.log(recvMsg);\r\n            if (recvMsg.headIcon && recvMsg.headIcon !== \"-\") {\r\n                cc.loader.load({url: recvMsg.headIcon, type: 'png'}, function(err, texture) {\r\n                    var spriteFrame = new cc.SpriteFrame(texture, cc.Rect(0, 0, texture.width, texture.height));\r\n                    if(this.userIcon) {\r\n                        this.userIcon.spriteFrame = spriteFrame;\r\n                    }\r\n                }.bind(this));\r\n            }\r\n        }\r\n    },\r\n\r\n    onDestroy() {\r\n        clientEvent.off(clientEvent.eventType.playerAccountGet, this.userInfoSet, this);\r\n    },\r\n\r\n\r\n    // readyOrNot(rd){\r\n    //     this.readyNode.active = rd;\r\n    // }\r\n});\r\n"]}