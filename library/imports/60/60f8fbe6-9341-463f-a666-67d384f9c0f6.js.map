{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\scripts\\game/assets\\scripts\\game\\getCosine.js"],"names":["_textureIdMapRenderTexture","cc","_decorator","ccclass","property","ScreenCaptureWindow","camera","find","getComponent","Camera","texture","RenderTexture","initWithSize","visibleRect","width","height","targetTexture","canvas","document","createElement","ctx","getContext","render","data","readPixels","originData2","grayData2","gray","histogramData2","getHistogram","histogramData","global_arr","orgArr","cosine","imgData","i","len","length","gray_data","avglist","hrzData","hrz","j","push","avg","arraySum","log","ss","Math","pow","spriteFrame","rect","getRect","console","tex","getTexture","rt","getId","drawTextureAt","array","total","imageData","arr","pow4","red","green","blue","index","arr1","arr2","axb","a","b","sqrt","Component"],"mappings":"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","file":"getCosine.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\game","sourcesContent":["let _textureIdMapRenderTexture = {}\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ScreenCaptureWindow extends cc.Component {\r\n\r\n \r\n    capture () {\r\n \r\n        //需要再创建一个 Camera ，depth要高于MainCamera 不然会黑屏 \r\n        let camera=cc.find('Canvas/Camera').getComponent(cc.Camera);\r\n        let texture = new cc.RenderTexture();\r\n        texture.initWithSize(cc.visibleRect.width, cc.visibleRect.height);\r\n        //cc.TEXTURE2_D_PIXEL_FORMAT_RGB_A8888,0x88F0\r\n        camera.targetTexture = texture;\r\n        this.texture = texture;\r\n \r\n \r\n        this.width = this.texture.width;\r\n        this.height = this.texture.height;\r\n\r\n \r\n        let canvas = document.createElement('canvas');\r\n        let ctx = canvas.getContext('2d');\r\n        canvas.width = this.width;\r\n        canvas.height = this.height;\r\n \r\n        camera.render();\r\n        let data = this.texture.readPixels();\r\n\r\n\r\n\r\n        /////////////////////////////////////////////////////////////////////////////////////////////////\r\n        //截图的直方图\r\n        var originData2=data;\r\n        var grayData2=this.gray(originData2);\r\n        var histogramData2=this.getHistogram(grayData2);\r\n\r\n        //原图的直方图\r\n        var histogramData=global_arr.orgArr;\r\n\r\n        //求相似度\r\n        this.cosine(histogramData,histogramData2);\r\n        return this.cosine(histogramData,histogramData2);\r\n        /////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    }\r\n \r\n    gray(imgData){//计算灰度\r\n        var data=imgData;\r\n\r\n        for(var i=0, len=data.length;i<len;i+=4){\r\n            var gray=((data[i]+data[i+1]+data[i+2])/3);\r\n            data[i+2]=data[i+1]=data[i]=gray;\r\n            // console.log(\"gray[i]=\"+gray);\r\n        }\r\n        // cc.log( \"grayData\", imgData);\r\n        return imgData;\r\n    }\r\n\r\n    getdiff(gray_data){//计算每行像素平均值\r\n        var avglist=[];\r\n        var hrzData=[];\r\n\r\n        for (var i =0;i<this.height;i++){//计算第i行的平均值，录入avglist\r\n            var hrz=0;\r\n\r\n            for (var j =0;j<this.width;j++){//第i行总值\r\n                hrz += gray_data[i*this.width+j];\r\n            \r\n            }\r\n            \r\n            hrzData.push(hrz);\r\n            var avg =hrzData[i]/this.width;//第i行的平均值\r\n            avglist.push(avg);\r\n\r\n        }\r\n        // cc.log( \"diffData\", avglist);\r\n        return avglist;\r\n    }\r\n\r\n    getss(avglist){//计算方差\r\n\r\n        var avg=this.arraySum(avglist)/avglist.length;//计算平均值\r\n        cc.log( \"avgData\", avg);\r\n        var ss=0;//方差初始值\r\n\r\n        cc.log( \"avglist.length\", avglist.length);\r\n        for(var i=0;i<avglist.length;i++){//计算方差\r\n            ss+=Math.pow((avglist[i]-avg),2)/avglist.length;\r\n            // cc.log( \"avglist[i]\", avglist[i]);\r\n            // cc.log( \"ss\", ss);\r\n        }\r\n\r\n        cc.log( \"ssData\", ss);\r\n        return ss;\r\n\r\n    }\r\n\r\n    getImgData(spriteFrame) {//获取图片像素\r\n        // let spriteFrame = sprite.spriteFrame\r\n        if (spriteFrame == null) {\r\n            return false\r\n        }\r\n\r\n        let rect = spriteFrame.getRect()//图片实际位置与长款\r\n        this.rect=rect;\r\n\r\n        console.log( \"rect\", rect)\r\n\r\n        let tex = spriteFrame.getTexture()\r\n        var rt = _textureIdMapRenderTexture[tex.getId()]\r\n\r\n        // RenderTexure方式\r\n        if (!rt) {\r\n            rt = new cc.RenderTexture()\r\n            rt.initWithSize(tex.width, tex.height)\r\n            rt.drawTextureAt(tex, 0, 0)\r\n            _textureIdMapRenderTexture[tex.getId()] = rt\r\n            // console.log(\"rt!=null\");\r\n        }else{\r\n            // console.log(\"rt=null\");\r\n        }\r\n\r\n        // data就是这个texture的rgba值数组\r\n        let data\r\n        data = rt.readPixels(data, 1, 1, rect.width-1, rect.height-1)\r\n        // cc.log( \"originData\", data)\r\n        return data;\r\n    }\r\n\r\n    arraySum(array){//数组求和算法\r\n        var total = 0;\r\n        var len = array.length;\r\n        for (var i = 0; i < len; i++){\r\n          total += array[i];\r\n        }\r\n        // cc.log( \"arraySumData\", total);\r\n        return total;\r\n    }\r\n\r\n    //得直方图\r\n    getHistogram(imageData) {\r\n        var arr = [];\r\n        for (var i = 0; i < 64; i++) {\r\n            arr[i] = 0;\r\n        }\r\n\r\n        var pow4 = Math.pow(4, 2);\r\n        for (var i = 0, len = imageData.length; i < len; i += 4) {\r\n            var red = (imageData[i] / 64) | 0;\r\n            var green = (imageData[i + 1] / 64) | 0;\r\n            var blue = (imageData[i + 2] / 64) | 0;\r\n            var index = red * pow4 + green * 4 + blue;\r\n            arr[index]++;\r\n\r\n        }  \r\n        // console.log(\"histogramData=\",arr);\r\n            return arr;\r\n    } \r\n\r\n    //得相似度\r\n    cosine(arr1, arr2) {\r\n        var axb = 0,\r\n            a = 0,\r\n            b = 0;\r\n        for (var i = 0, len = arr1.length; i < len; i++) {\r\n            axb += arr1[i] * arr2[i];\r\n            a += arr1[i] * arr1[i];\r\n            b += arr2[i] * arr2[i];\r\n        }\r\n        console.log(\"cosine=\"+(axb / (Math.sqrt(a) * Math.sqrt(b))));\r\n        return axb / (Math.sqrt(a) * Math.sqrt(b));\r\n    }\r\n\r\n    \r\n}\r\n"]}