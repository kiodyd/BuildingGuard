{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\block.js"],"names":["mvs","require","cc","Class","extends","Component","properties","moveDist","Float","inputEnabled","smooke","Prefab","start","direction","DirectState","None","mainCam","Camera","main","onLoad","isStatic","collider","getComponent","PhysicsCollider","rigidBody","RigidBody","linearVelocity","v2","gravityScale","tempTime","startTime","startX","touchReceiver","Canvas","instance","node","on","Node","EventType","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","onDestroy","off","event","touchLoc","getLocation","Game","GameManager","gameState","GameState","Play","GameEnv","outPlayers","includes","GLB","mySName","isTipSecond","uiFunc","openUI","panel","uiRoundTip","setData","setTimeout","bind","nowPlayerId","userInfo","id","aabb","getAABB","rigid","y","sendDirectMsg","Down","x","getWorldPosition","width","Change","log","Right","Left","engine","sendFrameEvent","JSON","stringify","action","DIRECTION","moveRight","parseFloat","awake","moveLeft","update","dt","changeRota","rotation","fallDown","move","onBeginContact","Animation","play","nextPlayerTurn","onPreSolve","contact","selfCollider","otherCollider","body","assistBar","parent","getChildByName","active","onPostSolve","_this","getImpulse","normalImpulses","getWorldManifold","points","forEach","smoo","instantiate","position","convertToNodeSpaceAR","element","disabledOnce","getInputEnabled","setDirect","dir"],"mappings":"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","file":"block.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["var mvs = require(\"Matchvs\");\r\n//用于每个方块的控制（emm可以优化结构，感觉一个控制器就够了）\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        moveDist: cc.Float,//单次点击移动的位移\r\n        inputEnabled: true,//该方块是否可以控制\r\n        smooke:cc.Prefab\r\n    },\r\n\r\n\r\n    start () {\r\n        this.inputEnabled = true;\r\n        this.moveDist = 12;\r\n        this.direction = DirectState.None;\r\n\r\n        this.mainCam = cc.Camera.main;\r\n    },\r\n\r\n\r\n\r\n    onLoad: function () {\r\n        \r\n        \r\n        this.isStatic = true;\r\n        this.collider = this.getComponent(cc.PhysicsCollider);\r\n        this.rigidBody = this.getComponent(cc.RigidBody);\r\n\r\n        //暂时关闭重力，并给方块一个匀速\r\n        this.rigidBody.linearVelocity = cc.v2(0, -50);\r\n        this.gravityScale = this.rigidBody.gravityScale;\r\n        this.rigidBody.gravityScale = 0;\r\n\r\n\r\n        this.tempTime = 0;\r\n        this.startTime = false;\r\n        this.startX = 0;\r\n\r\n        //this.applyLeft = false;\r\n        //this.applyRight = false;\r\n\r\n        var touchReceiver = cc.Canvas.instance.node;\r\n        touchReceiver.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n        touchReceiver.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        touchReceiver.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n\r\n    },\r\n\r\n    onDestroy() {\r\n        var touchReceiver = cc.Canvas.instance.node;\r\n        touchReceiver.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n        touchReceiver.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        touchReceiver.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n    },\r\n\r\n    onTouchStart(event) {\r\n        this.touchLoc = event.getLocation();\r\n\r\n\r\n        // if(this.inputEnabled){\r\n        //     this.startTime = true;\r\n        //     this.tempTime = 0;\r\n        //     this.startX = this.node.x;\r\n        // }\r\n\r\n    },\r\n\r\n\r\n    onTouchMove(event) {\r\n        // if(this.inputEnabled){\r\n        //     this.node.x += event.getDelta().x * this.moveScale;\r\n        // }\r\n\r\n    },\r\n\r\n    onTouchEnd(event) {\r\n\r\n        // if(this.inputEnabled){\r\n\r\n        //     //根据触摸时间和节点移动距离 来判断是否只是单击屏幕\r\n        //     if(this.tempTime < 0.15 && Math.abs(this.node.x - this.startX) < 7){\r\n        //         this.node.angle += 90;\r\n        //     }\r\n\r\n\r\n        // }\r\n        // this.startTime = false;\r\n\r\n        if (Game.GameManager.gameState !== GameState.Play) return;\r\n\r\n        if(Game.GameEnv.outPlayers.includes(GLB.mySName)){\r\n            if (!this.isTipSecond) {\r\n                uiFunc.openUI('uiTip', function (panel) {\r\n                    var uiRoundTip = panel.getComponent('uiTip');\r\n                    uiRoundTip.setData(\"你已经被淘汰！\");\r\n                })\r\n            }\r\n            this.isTipSecond = true;\r\n            setTimeout(function () {\r\n                this.isTipSecond = false;\r\n            }.bind(this), 2000);\r\n            return;\r\n        }\r\n\r\n        if (GLB.nowPlayerId !== GLB.userInfo.id) {\r\n            if (!this.isTipSecond) {\r\n                uiFunc.openUI('uiTip', function (panel) {\r\n                    var uiRoundTip = panel.getComponent('uiTip');\r\n                    uiRoundTip.setData(\"其他玩家的回合！\");\r\n                })\r\n            }\r\n            this.isTipSecond = true;\r\n            setTimeout(function () {\r\n                this.isTipSecond = false;\r\n            }.bind(this), 2000);\r\n            return;\r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n        if(this.inputEnabled){\r\n\r\n            //点击方块左边往左移动，右边右移，中间区域则变形方块,下滑则下降方块\r\n\r\n            var aabb =this.collider.getAABB();\r\n            var rigid = this.node.getComponent(cc.RigidBody);\r\n            if(this.touchLoc){\r\n                if (event.getLocation().y - this.touchLoc.y < -50 ) {\r\n                    //this.fallDown();\r\n                    this.sendDirectMsg(DirectState.Down);\r\n                } else if(this.touchLoc.x < rigid.getWorldPosition().x + aabb.width/2 && this.touchLoc.x > rigid.getWorldPosition().x - aabb.width/2){\r\n                    //this.changeRota();\r\n                    this.sendDirectMsg(DirectState.Change);\r\n                }\r\n                else {\r\n                    \r\n                    if (this.touchLoc.x >= rigid.getWorldPosition().x ) {\r\n                        cc.log(\"right\");\r\n        \r\n                        this.sendDirectMsg(DirectState.Right);\r\n        \r\n                    } else if (this.touchLoc.x < rigid.getWorldPosition().x ) {\r\n                        cc.log(\"left\");\r\n        \r\n                        this.sendDirectMsg(DirectState.Left);\r\n        \r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    },\r\n\r\n    sendDirectMsg(direction) {\r\n        if (Game.GameManager.gameState === GameState.Play) {\r\n            mvs.engine.sendFrameEvent(JSON.stringify({\r\n                action: GLB.DIRECTION,\r\n                direction: direction\r\n            }));\r\n        }\r\n    },\r\n    moveRight() {\r\n        this.node.x += parseFloat(this.moveDist);\r\n        this.node.getComponent(cc.RigidBody).awake = true;\r\n    },\r\n    moveLeft() {\r\n        this.node.x += parseFloat(-this.moveDist);\r\n        this.node.getComponent(cc.RigidBody).awake = true;\r\n    },\r\n\r\n    update(dt) {\r\n        \r\n    },\r\n\r\n    changeRota() {\r\n        this.node.rotation += 90;\r\n    },\r\n\r\n    fallDown() {\r\n        this.rigidBody.linearVelocity = cc.v2(0, -640);\r\n        //this.inputEnabled = false;\r\n    },\r\n\r\n\r\n    move() {\r\n        switch (this.direction) {\r\n            case DirectState.None:\r\n                break;\r\n            case DirectState.Right:\r\n                this.moveRight();\r\n                break;\r\n            case DirectState.Left:\r\n                this.moveLeft();\r\n                break;\r\n            case DirectState.Down:\r\n                this.fallDown();\r\n                break;\r\n            case DirectState.Change:\r\n                this.changeRota();\r\n                break;\r\n        }\r\n        this.direction = DirectState.None;\r\n    },\r\n\r\n\r\n    onBeginContact(){\r\n        if (this.inputEnabled && Game.GameManager.gameState === GameState.Play) {\r\n            //抖动摄像头\r\n            this.mainCam.getComponent(cc.Animation).play();\r\n            \r\n\r\n            Game.GameEnv.nextPlayerTurn();\r\n            \r\n        }\r\n    },\r\n\r\n    onPreSolve: function (contact, selfCollider, otherCollider) {\r\n        if (this.inputEnabled && Game.GameManager.gameState === GameState.Play) {\r\n            //落地时控制方块着地的速度\r\n            selfCollider.body.linearVelocity = cc.v2(0, -70);\r\n            //关闭辅助\r\n            let assistBar = this.node.parent.getChildByName(\"key_assistBar\");\r\n            assistBar.active = false;\r\n        }\r\n        \r\n    },\r\n\r\n    onPostSolve: function (contact, selfCollider, otherCollider) {\r\n        let _this = this;\r\n        //落地后不再处理\r\n        if (this.isStatic) {\r\n            if (contact.getImpulse().normalImpulses[0] > 0) {\r\n                this.rigidBody.gravityScale = this.gravityScale;//恢复原有重力\r\n                this.isStatic = false;\r\n                this.inputEnabled = false;\r\n\r\n                //在碰撞点处生成尘土特效\r\n                contact.getWorldManifold().points.forEach(element => {\r\n                    let smoo = cc.instantiate(_this.smooke);\r\n                    smoo.parent = _this.node;\r\n                    smoo.position = _this.node.convertToNodeSpaceAR(element);\r\n                });\r\n                \r\n            }\r\n            else {\r\n                contact.disabledOnce = true;\r\n            }\r\n        }\r\n\r\n\r\n\r\n    },\r\n\r\n    getInputEnabled() {\r\n        return this.inputEnabled;\r\n    },\r\n    setDirect(dir) {\r\n        this.direction = dir;\r\n    }\r\n\r\n\r\n});\r\n"]}